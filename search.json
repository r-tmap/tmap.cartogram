[{"path":"https://r-tmap.github.io/tmap.cartogram/articles/cartograms.html","id":"cartogram","dir":"Articles","previous_headings":"","what":"Cartogram","title":"Cartograms","text":"cartograms, areal regions distorted obtained area sizes proportional quantitative variable. facilitate following types: contiguous cartogram, shapes polygons distorted, neighborhood relationships preserved much possible. non-contiguous cartogram, polygons resized keep shape. Dorling cartogram polygons replaced bubbles. Note different bubble map: Dorlong cartogram bubbles overlap. achieve non-overlapping bubbles proportional target variable, bubbles may relocated. Currently, packages uses cartogram package Sebastian Jeworutzki hood.","code":""},{"path":"https://r-tmap.github.io/tmap.cartogram/articles/cartograms.html","id":"map-projection","dir":"Articles","previous_headings":"","what":"Map projection","title":"Cartograms","text":"order work well, strongly recommended use projected CRS (map projection) (approximately) equal-area. ? cartograms transformation require area polygons approximately proportional real areas. case mercator projection (plain lat/lon coordinates). examples use Robinson projection. unsure use, set crs = \"auto\" enables (work--progress) automatic map projection recommendation. addition, crs must set tm_shape(), afterwards via tm_crs(). ? former ensures transformation applied correct CRS, whereas latter used plotting . Finally, recommend disable basemaps view mode. polygons distorted (therefore consistent basemaps), basemaps usually rendered (pseudo) mercator projection. default spatial object keep projected CRS basemaps disabled.","code":""},{"path":"https://r-tmap.github.io/tmap.cartogram/articles/cartograms.html","id":"contiguous-cartograms","dir":"Articles","previous_headings":"","what":"Contiguous cartograms","title":"Cartograms","text":"can use polygon fill color depict variable, Happy Planet Index:","code":"Africa = World[World$continent == \"Africa\", ]  tm_shape(Africa, crs = \"+proj=robin\") +     tm_cartogram(size = \"pop_est\", options = opt_tm_cartogram(itermax = 15)) #> Cartogram in progress... Africa = World[World$continent == \"Africa\", ]  tm_shape(Africa, crs = \"+proj=robin\") +     tm_cartogram(size = \"pop_est\",                   fill = \"life_exp\",                  fill.scale = tm_scale_intervals(values = \"-cols4all.bu_br_div\"),                  fill.legend = tm_legend(\"Age\"),                  options = opt_tm_cartogram(itermax = 15)) + tm_title(\"Life Expectancy\") #> Cartogram in progress..."},{"path":"https://r-tmap.github.io/tmap.cartogram/articles/cartograms.html","id":"non-contiguous-cartograms","dir":"Articles","previous_headings":"","what":"Non-contiguous cartograms","title":"Cartograms","text":"non-contiguous cartogram World:","code":"tm_shape(Africa, crs = \"+proj=robin\") +     tm_cartogram_ncont(size = \"pop_est\", options = opt_tm_cartogram_ncont()) #> Cartogram in progress... tm_shape(Africa, crs = \"+proj=robin\") +     tm_cartogram_ncont(size = \"pop_est\",                         fill = \"inequality\",                        fill.scale = tm_scale_continuous(values = \"cols4all.pu_gn_div\", values.range = c(0, 0.5)),                        fill.legend = tm_legend(\"\"),                        options = opt_tm_cartogram_ncont()) +     tm_text(\"name\", options = opt_tm_text(point.label = TRUE)) + tm_title(\"Income inequality (Gini coefficient)\") #> Cartogram in progress... tm_shape(World, crs = \"+proj=robin\") +     tm_polygons() +     tm_cartogram_ncont(size = \"pop_est\", fill = \"yellow\") #> Cartogram in progress..."},{"path":"https://r-tmap.github.io/tmap.cartogram/articles/cartograms.html","id":"dorlin-cartograms","dir":"Articles","previous_headings":"","what":"Dorlin cartograms","title":"Cartograms","text":"can bubble fill color show data, press freedom:","code":"tm_shape(World, crs = \"+proj=robin\") +     tm_polygons() +     tm_cartogram_dorling(size = \"pop_est\", fill = \"yellow\") #> Cartogram in progress... tm_shape(World, crs = \"+proj=robin\") +     tm_cartogram_dorling(size = \"pop_est\",                           fill = \"press\",                          fill.scale = tm_scale_continuous(values = \"cols4all.pu_gn_div\", midpoint = 50),                          fill.legend = tm_legend(\"\", height = 30)) + tm_title(\"World Press Freedom Index\") #> Cartogram in progress..."},{"path":"https://r-tmap.github.io/tmap.cartogram/articles/cartograms.html","id":"view-mode","dir":"Articles","previous_headings":"","what":"View mode","title":"Cartograms","text":"maps also available interactively. noted trick tmap disable basemaps. can done tm_basemap(NULL):","code":"tmap_mode(\"view\") #> ℹ tmap mode set to \"view\". tm_shape(World, crs = \"+proj=robin\") +     tm_cartogram_dorling(size = \"pop_est\",                           fill = \"press\",                          fill.scale = tm_scale_continuous(values = \"cols4all.pu_gn_div\", midpoint = 50),                          fill.legend = tm_legend(\"\", height = 30)) + tm_title(\"World Press Freedom Index\") + tm_basemap(NULL) #> Cartogram in progress... #> [view mode] WegGL does not work (yet) with projected map projections, so it has #> been disabled."},{"path":"https://r-tmap.github.io/tmap.cartogram/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Martijn Tennekes. Author, maintainer.","code":""},{"path":"https://r-tmap.github.io/tmap.cartogram/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Tennekes M (2025). tmap.cartogram: Extension 'tmap' Creating Cartograms. R package version 0.1, https://r-tmap.github.io/tmap.cartogram/, https://github.com/r-tmap/tmap.cartogram.","code":"@Manual{,   title = {tmap.cartogram: Extension to 'tmap' for Creating Cartograms},   author = {Martijn Tennekes},   year = {2025},   note = {R package version 0.1, https://r-tmap.github.io/tmap.cartogram/},   url = {https://github.com/r-tmap/tmap.cartogram}, }"},{"path":"https://r-tmap.github.io/tmap.cartogram/index.html","id":"tmapcartpgram-extension-to-tmap-for-creating-cartograms","dir":"","previous_headings":"","what":"Extension to tmap for Creating Cartograms","title":"Extension to tmap for Creating Cartograms","text":"Provides new layer functions tmap create various types cartograms.","code":""},{"path":"https://r-tmap.github.io/tmap.cartogram/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Extension to tmap for Creating Cartograms","text":"Installation tmap.cartogram straightforward:","code":"install.packages(\"tmap.cartogram\")"},{"path":"https://r-tmap.github.io/tmap.cartogram/index.html","id":"development-version","dir":"","previous_headings":"Installation","what":"Development version","title":"Extension to tmap for Creating Cartograms","text":"development version, also recommended install development version tmap well.","code":"# install.packages(\"remotes\") remotes::install_github(\"r-tmap/tmap.cartogram\")  # On Linux, with pak # install.packages(\"pak\") pak::pak(\"r-tmap/tmap.cartogram\")  # Or from r-universe install.packages(\"tmap.cartogram\", repos = c(\"https://r-tmap.r-universe.dev\", \"https://cloud.r-project.org\"))"},{"path":"https://r-tmap.github.io/tmap.cartogram/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Extension to tmap for Creating Cartograms","text":"See https://r-tmap.github.io/tmap.cartogram/articles/cartograms","code":""},{"path":"https://r-tmap.github.io/tmap.cartogram/reference/tm_cartogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Map layer: cartogram — tm_cartogram","title":"Map layer: cartogram — tm_cartogram","text":"Map layer draws cartogram. recommended specify proper crs `tmap:tm_shape()`.","code":""},{"path":"https://r-tmap.github.io/tmap.cartogram/reference/tm_cartogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map layer: cartogram — tm_cartogram","text":"","code":"tm_cartogram(   size = 1,   size.scale = tmap::tm_scale(),   size.legend = tmap::tm_legend_hide(),   size.chart = tmap::tm_chart_none(),   size.free = NA,   plot.order = tmap::tm_plot_order(\"size\", reverse = FALSE),   options = opt_tm_cartogram(),   ... )  tm_cartogram_ncont(   size = 1,   size.scale = tm_scale(),   size.legend = tm_legend_hide(),   size.chart = tm_chart_none(),   size.free = NA,   plot.order = tm_plot_order(\"size\", reverse = FALSE),   options = opt_tm_cartogram_ncont(),   ... )  tm_cartogram_dorling(   size = 1,   size.scale = tm_scale(),   size.legend = tm_legend_hide(),   size.chart = tm_chart_none(),   size.free = NA,   plot.order = tm_plot_order(\"size\", reverse = FALSE),   options = opt_tm_cartogram_dorling(),   ... )  opt_tm_cartogram(type = \"cont\", itermax = 15, ...)  opt_tm_cartogram_ncont(type = \"ncont\", expansion = 1, inplace = FALSE, ...)  opt_tm_cartogram_dorling(type = \"dorling\", share = 5, itermax = 1000, ...)"},{"path":"https://r-tmap.github.io/tmap.cartogram/reference/tm_cartogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map layer: cartogram — tm_cartogram","text":"size, size.scale, size.legend, size.chart, size.free Visual variable specifies polygon sizes. plot.order Specification order spatial features drawn. See [tmap:tm_plot_order()] details. options passed corresponding `opt_<layer_function>` function ... arguments passed [cartogram::cartogram_cont()] type cartogram type, one : \"cont\" contiguous cartogram, \"ncont\" non-contiguous cartogram \"dorling\" Dorling cartograms itermax, maximum number iterations (see [cartogram::cartogram_cont()]) expansion factor expansion, see [cartogram::cartogram_ncont()] (argument `k`) inplace polygon modified original place? (`TRUE` default) share share bounding box filled larger circle (see [cartogram::cartogram_dorling()] argument `k`)","code":""},{"path":"https://r-tmap.github.io/tmap.cartogram/reference/tm_cartogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map layer: cartogram — tm_cartogram","text":"","code":"library(tmap)  Africa = World[World$continent == \"Africa\", ]  tm_shape(Africa, crs = \"+proj=robin\") +   tm_cartogram_ncont(size = \"pop_est\", options = opt_tm_cartogram_ncont()) #> Cartogram in progress...   if (FALSE) { # \\dontrun{ tm_shape(Africa, crs = \"+proj=robin\") +   tm_cartogram(size = \"pop_est\", options = opt_tm_cartogram(itermax = 15))  tm_shape(World, crs = \"+proj=robin\") +   tm_polygons() +   tm_cartogram_ncont(size = \"pop_est\", fill = \"yellow\") } # }"},{"path":"https://r-tmap.github.io/tmap.cartogram/reference/tmapTransCartogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Cartogram transformation — tmapTransCartogram","title":"Cartogram transformation — tmapTransCartogram","text":"Cartogram transformation","code":""},{"path":"https://r-tmap.github.io/tmap.cartogram/reference/tmapTransCartogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cartogram transformation — tmapTransCartogram","text":"","code":"tmapTransCartogram(shpTM, size, ord__, plot.order, args, scale)"},{"path":"https://r-tmap.github.io/tmap.cartogram/reference/tmapTransCartogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cartogram transformation — tmapTransCartogram","text":"shpTM, size, ord__, plot.order, args, scale tmap internals","code":""}]
